/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define NUM     3

&caps_word {
    continue-list = <UNDERSCORE MINUS LS(MINUS) UP DOWN LEFT RIGHT BSPC DEL>;
};

/ {
    behaviors {
        tdrstl: tdrstl {
            compatible = "zmk,behavior-tap-dance";
            label = "tdrstl";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F5>, <&reset>;
        };
        
        tdrstr: tdrstr {
            compatible = "zmk,behavior-tap-dance";
            label = "tdrstr";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&trans>, <&reset>;
        };
        
        tdcaps: tdcaps {
            compatible = "zmk,behavior-tap-dance";
            label = "tdcaps";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&caps_word>, <&kp CAPS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  | SPACE |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
            &kp GRAVE       &kp N1    &kp N2    &kp N3     &kp N4     &kp N5                                &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &kp MINUS
            &kp ESC         &kp Q     &kp W     &kp E      &kp R      &kp T                                 &kp Y       &kp U       &kp I       &kp O       &kp P       &kp BSPC
            &kp TAB         &kp A     &kp S     &kp D      &kp F      &kp G                                 &kp H       &kp J       &kp K       &kp L       &kp SEMI    &kp SQT
            &mt LSHFT LBRC  &kp Z     &kp X     &kp C      &kp V      &kp B     &kp C_MUTE  &kp SPACE       &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH    &mt RSHFT RBRC
                                      &kp LGUI  &kp LALT   &kp LCTRL  &mo LOWER &kp SPACE   &mt RALT RET    &mo RAISE   &kp RCTRL   &kp RALT    &tog NUM
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

        lower_layer {
            // ----------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |F5/rst|                 |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                 |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                 |  ^   |  &    |   *   |  (   |   )   |       |
            // |       |  =  |  -  |  +   |  {   |  }   |       |  |      |  [   |  ]    |   _   |  |   |   \   |       |
            //               |     |      |      |      |  VCC  |  |      |      |       |       |      |

            bindings = <
            &trans      &kp F1      &kp F2      &kp F3          &kp F4      &tdrstl                                 &kp F6     &kp F7    &kp F8     &kp F9    &kp F10   &kp F11
            &kp GRAVE   &kp N1      &kp N2      &kp N3          &kp N4      &kp N5                                  &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &kp F12
            &trans      &kp EXCL    &kp AT      &kp HASH        &kp DLLR    &kp PRCNT                               &kp CARET  &kp AMPS  &kp STAR   &kp LPAR  &kp RPAR  &trans
            &trans      &kp EQUAL   &kp MINUS   &kp KP_PLUS     &kp LBRC    &kp RBRC    &trans              &trans  &kp LBKT   &kp RBKT  &kp UNDER  &kp PIPE  &kp BSLH  &trans
                                    &trans      &trans          &trans      &trans      &ext_power EP_TOG   &trans  &trans     &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT0  | BT1  |  BT2  |  BT3  |  BT4 |                | /RST |      |       |      |       |       |
            // |A+F4 | INS  | PSCR | GUI   | CAPSW |      |                |PG_UP |      |       |      |       |       |
            // |     | !    | @    | #     | $     | %    |                |  <-  |   v  |   ^   |  ->  |  DEL  | BKSPC |
            // |     | =    | -    | +     | {     |  }   |      |  |      |PG_DN | prev | play  | next |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
            &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                &tdrstr     &trans      &trans      &trans      &trans  &trans
            &kp LA(F4)  &kp INS         &kp PSCRN       &kp K_CMENU   &tdcaps       &trans                      &kp PG_UP   &trans      &trans      &trans      &trans  &trans
            &trans      &kp EXCL        &kp AT          &kp HASH      &kp DLLR      &kp PRCNT                   &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &kp DEL &kp BSPC
            &trans      &kp EQUAL       &kp MINUS       &kp PLUS      &kp LBRC      &kp RBRC    &trans  &trans  &kp PG_DN   &kp C_PREV  &kp C_PP    &kp C_NEXT  &trans  &trans
                                        &trans          &trans        &trans        &trans      &trans  &trans  &trans      &trans      &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

        num_layer {
            // -----------------------------------------------------------------------------------------------------------
            // |     |      |  NUM  |   /  |   *   |  CLR |                |      | NUM   |   /  |   *   |  CLR  |       |
            // |     |      |   7   |   8  |   9   |   -  |                |      |   7   |   8  |   9   |   -   |       |
            // |     |      |   4   |   5  |   6   |   +  |                |      |   4   |   5  |   6   |   +   |       |
            // |     |      |   1   |   2  |   3   |      |      |  |      |      |   1   |   2  |   3   |       |       |
            //              |   0   |   .  |       |      |      |  |      |      |   0   |   .  |       |

            bindings = <
            &trans  &trans  &kp KP_NUMLOCK  &kp KP_DIVIDE   &kp KP_MULTIPLY &kp KP_CLEAR                    &trans  &kp KP_NUMLOCK  &kp KP_DIVIDE   &kp KP_MULTIPLY &kp KP_CLEAR    &trans
            &trans  &trans  &kp KP_N7       &kp KP_N8       &kp KP_N9       &kp KP_MINUS                    &trans  &kp KP_N7       &kp KP_N8       &kp KP_N9       &kp KP_MINUS    &trans
            &trans  &trans  &kp KP_N4       &kp KP_N5       &kp KP_N6       &kp KP_PLUS                     &trans  &kp KP_N4       &kp KP_N5       &kp KP_N6       &kp KP_PLUS  &kp BSPC
            &trans  &trans  &kp KP_N1       &kp KP_N2       &kp KP_N3       &trans          &trans  &trans  &trans  &kp KP_N1       &kp KP_N2       &kp KP_N3       &trans          &trans
                            &kp KP_N0       &kp KP_DOT      &trans          &trans          &trans  &trans  &trans  &kp KP_N0       &kp KP_DOT      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

    };
};
